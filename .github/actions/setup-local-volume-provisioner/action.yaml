name: "Setup Local Volume Provisioner"
description: 'Installs Local Volume Provisioner'
inputs:
  repositoryPath:
    description: "Path to where the project code lives"
    required: true
runs:
  using: "composite"
  steps:
  
  - name: Create XFS volume
    shell: bash
    working-directory: ${{ inputs.repositoryPath }}
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit
      
      # /mnt has limited space in GH Actions, use /var
      img_path="/var/persistent-volumes/persistent-volume.img"
      mount_path="/mnt/persistent-volumes"
      
      img_dir=$( dirname "${img_path}" )
  
      sudo mkdir -p "${img_dir}"
      if [[ ! -f "${img_path}" ]]; then
        sudo dd if=/dev/zero of="${img_path}" bs=1024 count=0 seek=20971520
      fi
  
      FS=$( sudo blkid -o value -s TYPE "${img_path}" || true )
      if [[ "${FS}" != "xfs" ]]; then
        sudo mkfs --type=xfs "${img_path}"
      fi
      
      sudo mkdir -p "${mount_path}"
      sudo mount -t xfs -o prjquota "${img_path}" "${mount_path}"
      
  - name: Install Dynamic Local Volume Provisioner
    shell: bash
    working-directory: ${{ inputs.repositoryPath }}
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit
      
      kubectl -n local-csi-driver apply --server-side -f ./.github/actions/setup-local-volume-provisioner/manifests/local-csi-driver
      kubectl -n local-csi-driver rollout status --timeout=5m daemonset.apps/local-csi-driver
  
  - name: Install default Storage Class
    shell: bash
    working-directory: ${{ inputs.repositoryPath }}
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit
      
      kubectl apply --server-side -f ./.github/actions/setup-local-volume-provisioner/manifests/storageclass_xfs.yaml
